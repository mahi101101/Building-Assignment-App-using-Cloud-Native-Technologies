apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      ports:
        - name: "5432"
          port: 5432
          targetPort: 5432
      selector:
        io.kompose.service: db
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: pgadmin
      name: pgadmin
    spec:
      ports:
        - name: "5050"
          port: 5050
          targetPort: 80
      selector:
        io.kompose.service: pgadmin
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: quiz
      name: quiz
    spec:
      ports:
        - name: "8000"
          port: 8000
          targetPort: 8000
      selector:
        io.kompose.service: quiz
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: db
      strategy:
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.service: db
        spec:
          containers:
            - env:
                - name: POSTGRES_DB
                  value: postgres-db-quiz
                - name: POSTGRES_PASSWORD
                  value: postgres
                - name: POSTGRES_USER
                  value: postgres
              image: postgres
              name: db-postgres
              ports:
                - containerPort: 5432
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: db-claim0
          restartPolicy: Always
          volumes:
            - name: db-claim0
              persistentVolumeClaim:
                claimName: db-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: db-claim0
      name: db-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: pgadmin
      name: pgadmin
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: pgadmin
      strategy:
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.service: pgadmin
        spec:
          containers:
            - env:
                - name: PGADMIN_DEFAULT_EMAIL
                  value: root@root.com
                - name: PGADMIN_DEFAULT_PASSWORD
                  value: root
              image: dpage/pgadmin4
              name: pgadmin4
              ports:
                - containerPort: 80
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/pgadmin
                  name: pgadmin-claim0
          restartPolicy: Always
          volumes:
            - name: pgadmin-claim0
              persistentVolumeClaim:
                claimName: pgadmin-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: pgadmin-claim0
      name: pgadmin-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: quiz
      name: quiz
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: quiz
      strategy:
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.service: quiz
        spec:
          containers:
            - args:
                - sh
                - -c
                - |2-
                   python manage.py makemigrations &&
                          python manage.py migrate &&
                          python manage.py runserver 0.0.0.0:8000
              image: mahi101101/quiz-django:v1.0
              name: quiz-app 
              ports:
                - containerPort: 8000
              resources: {}
              volumeMounts:
                - mountPath: /app
                  name: quiz-claim0
          restartPolicy: Always
          volumes:
            - name: quiz-claim0
              persistentVolumeClaim:
                claimName: quiz-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: quiz-claim0
      name: quiz-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
kind: List
metadata: {}

